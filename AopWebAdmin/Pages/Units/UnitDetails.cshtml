@page "/Units/{RequestedUnit}"
@model UnitDetails
@{
    ViewData["Title"] = Model.RequestedUnit == "new" ? "New Unit" : "Unit: " + Model.RequestedUnit;
}

@if (Model.RequestedUnit == "new")
{
    <h1>Add New Unit</h1>
}
else
{
    <h1>Unit [@Model.Unit.Id]</h1>
    <form method="post">
        <input type="hidden" asp-for="Action" value="@UnitDetails.Actions.Delete"/>
        <button type="submit" class="btn btn-danger">Delete</button>
    </form>
}

<form method="post">
    <button type="submit" class="btn btn-success">
        @if (Model.RequestedUnit == "new")
        {
            <span>Add</span>
        }
        else
        {
            <span>Update</span>
        }
    </button>
    <input type="hidden" asp-for="Action" value="@UnitDetails.Actions.Update"/>
    <div class="form-group">
        <label asp-for="Unit.Id">Unit ID</label>
        <input asp-for="Unit.Id" class="form-control"/>
        <span asp-validation-for="Unit.Id" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Unit.Name.EnglishDescription.Content">English Name</label>
        <input asp-for="Unit.Name.EnglishDescription.Content" class="form-control"/>
        <span asp-validation-for="Unit.Name.EnglishDescription.Content" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Unit.Name.ArabicDescription.Content">Arabic Name</label>
        <input asp-for="Unit.Name.ArabicDescription.Content" class="form-control"/>
        <span asp-validation-for="Unit.Name.ArabicDescription.Content" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Unit.Description.EnglishDescription.Content">English Description</label>
        <textarea asp-for="Unit.Description.EnglishDescription.Content" class="form-control"></textarea>
        <span asp-validation-for="Unit.Description.EnglishDescription.Content" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Unit.Description.ArabicDescription.Content">Arabic Description</label>
        <textarea asp-for="Unit.Description.ArabicDescription.Content" class="form-control"></textarea>
        <span asp-validation-for="Unit.Description.ArabicDescription.Content" class="text-danger"></span>
    </div>

    <!-- Problemset management -->
    <div class="form-group">
        <label>Problemset</label>
        <select asp-for="Unit.Problemset" class="form-control">
            @foreach (var item in Model.AvailableProblemsets)
            {
                @if (item.Id == Model.Unit.Problemset)
                {
                    <option value="@item.Id" selected>
                        @item.Id
                    </option>
                }
                else
                {
                    <option value="@item.Id">
                        @item.Id
                    </option>
                }
            }
        </select>
    </div>

    <!-- Lessons management -->
    <div class="form-group">
        <label>Lessons</label>
        <div class="form-group row">
            <div class="col-md-5">
                <label>Available Lessons</label>
                <input type="text" id="searchAvailableItems" class="form-control mb-2" placeholder="Search...">
                <select id="availableItems" multiple="multiple" class="form-control" size="8">
                    @foreach (var item in Model.AvailableLessons)
                    {
                        <option value="@item.Id">@item.Id</option>
                    }
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-center justify-content-center">
                <button type="button" id="addItem" class="btn btn-primary m-1">&gt;</button>
                <button type="button" id="removeItem" class="btn btn-primary m-1">&lt;</button>
            </div>
            <div class="col-md-5">
                <label>Unit Lessons</label>
                <select id="selectedItems" asp-for="Unit.Lessons" multiple="multiple" class="form-control" size="8">
                    @foreach (var item in Model.Unit.Lessons)
                    {
                        <option value="@item">@item</option>
                    }
                </select>
            </div>
        </div>

    </div>

    <!-- Validation quizzes -->
    <div class="form-group">
        <label>Validation Quizzes</label>
        <div class="form-group row">
            <div class="col-md-5">
                <label>Available Quizzes</label>
                <input type="text" id="searchAvailableItems-1" class="form-control mb-2" placeholder="Search...">
                <select id="availableItems-1" multiple="multiple" class="form-control" size="8">
                    @foreach (var item in Model.AvailableQuizzes)
                    {
                        <option value="@item.Id">@item.Id</option>
                    }
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-center justify-content-center">
                <button type="button" id="addItem-1" class="btn btn-primary m-1">&gt;</button>
                <button type="button" id="removeItem-1" class="btn btn-primary m-1">&lt;</button>
            </div>
            <div class="col-md-5">
                <label>Unit Quizzes</label>
                <select id="selectedItems-1" asp-for="Unit.ValidationQuizzes" multiple="multiple" class="form-control" size="8">
                    @foreach (var item in Model.Unit.ValidationQuizzes)
                    {
                        <option value="@item">@item</option>
                    }
                </select>
            </div>
        </div>

    </div>
</form>


<script>
        document.getElementById("searchAvailableItems").addEventListener("input", function() {
            const filter = this.value.toLowerCase();
            const availableItems = document.getElementById("availableItems");

            Array.from(availableItems.options).forEach(option => {
                const text = option.text.toLowerCase();
                option.style.display = text.includes(filter) ? "" : "none";
            });
        });
        
        document.getElementById("addItem").addEventListener("click", function() {
            moveItems("availableItems", "selectedItems");
        });

        document.getElementById("removeItem").addEventListener("click", function() {
            moveItems("selectedItems", "availableItems");
        });

        function moveItems(sourceId, targetId) {
            const sourceList = document.getElementById(sourceId);
            const targetList = document.getElementById(targetId);

            Array.from(sourceList.selectedOptions).forEach(option => {
                targetList.appendChild(option);
            });
        }


        document.getElementById("searchAvailableItems-1").addEventListener("input", function() {
            const filter = this.value.toLowerCase();
            const availableItems = document.getElementById("availableItems-1");

            Array.from(availableItems.options).forEach(option => {
                const text = option.text.toLowerCase();
                option.style.display = text.includes(filter) ? "" : "none";
            });
        });

        document.getElementById("addItem-1").addEventListener("click", function() {
            moveItems("availableItems-1", "selectedItems-1");
        });

        document.getElementById("removeItem-1").addEventListener("click", function() {
            moveItems("selectedItems-1", "availableItems-1");
        });
    
</script>